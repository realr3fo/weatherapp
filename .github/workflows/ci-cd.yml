name: CI/CD Pipeline

on:
  push:
    branches:
      - deployment
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "16.14.1"

      - name: Install dependencies and run backend tests
        run: |
          cd backend
          npm ci
          npm run test

      - name: Install dependencies and run frontend tests
        run: |
          cd frontend
          npm ci
          npm run test

      - name: Set up Docker
        run: |
          docker --version
          docker-compose --version

      - name: Prepare environment variables
        run: |
          if [ ! -f .env ]; then
            cp .env_sample .env
          fi

      - name: Build and start services
        run: |
          docker-compose up -d

      - name: Install dependencies for Robot Framework
        run: |
          pip install robotframework

      - name: Run Robot Framework tests
        run: |
          robot robot-tests

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Authenticate with gcloud
        run: |
          echo "${{ secrets.GCR_JSON_KEY_ENCODED }}" | base64 --decode > gcloud_key.json
          gcloud auth activate-service-account --key-file gcloud_key.json
          gcloud config set project weatherapp-eficode

      - name: Configure Docker to use gcloud command-line tool as a credential helper
        run: |
          gcloud --quiet auth configure-docker

      - name: Run Ansible playbook
        run: |
          ansible-playbook deploy.yml
